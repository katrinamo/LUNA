{"version":3,"sources":["../../src/pages/createAccount/createAccount.ts","../../src/pages/onBoarding/onBoarding.ts","../../src/pages/launch/launch.ts","../../src/pages/login/login.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/settingsLogin/settingsLogin.ts","../../src/pages/settings/settings.ts","../../src/pages/tracker/tracker.ts","../../src/pages/logout/logout.ts","../../src/pages/calendar/calendar.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/displayUID/displayUID.ts","../../src/pages/calendar/calendar.ts","../../node_modules/moment/locale ^/.*$","../../src/pages/tabs/tabs.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\r\nTitle: createAccount.ts\r\nAuthor:  Dillon Pulliam\r\nDate: 7/7/2017\r\n\r\nPurpose: This code is for the initial create account screen that is only accessed the very first time the user accesses the app. This page will ask the user to enter their\nrandom ID sent to their uky email to verify that they are a UK student. It will also ask the user to create a username and password which must be entered\nin to change any app settings. The app will send all this data to the server and the server will send back a uid to store within the local storage component of\nthe app. Note that this page should only be accessed the very first time the user opens the app and is bypassed all other times.\r\n\r\nInput:\r\n    emailID: This is the random string sent to the user's UKY email address to verify they are a UK student.\n    username: a random username created by the user. A hashed version is then sent to the server and stored in local storage\n    password: a random password created by the user. A hashed version is then sent to the server and stored in local storage.\r\n\r\nOutput:\r\n    Success:\r\n        New user added to the database and hashed username and password are stored.\r\n        Success message sent to the app along with a uid.\r\n        App is then linked back to onBoarding questions page.\r\n\r\n    Failure:\r\n        Failure message sent to the app. This could either be that the server didn't recieve the data or that the user failed to fill out a necessary field for\r\n        data to be sent.\r\n*/\n\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\nimport { Http, Headers } from '@angular/http';\nimport { Storage } from '@ionic/storage';\nimport { Md5 } from 'ts-md5/dist/md5'; \nimport { OnBoardingPage } from '../onBoarding/onBoarding';\nimport { LoginPage } from '../login/login';\nimport { TabsPage } from '../tabs/tabs';\nimport 'rxjs/add/operator/map';\n\n@Component({\n    selector: 'page-createAccount',\n    templateUrl: 'createAccount.html'\n})\nexport class CreateAccountPage {\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private http: Http, private storage: Storage) {\n        //alert(\"Please note: any information taken is for research purposes only.\")\n\tthis.storage.clear();\n\n        this.customalert(\"Please note: any information taken is for research purposes only.\", \"Luna\");\n\n        //for debugging purposes\n        //this.storage.set('uid', '');\n\n        this.storage.get('uid').then((data) => {\n            if ((data == '') || (data == undefined)) {\n                //Do nothing as we want the createAccount page to execute for a first time user.\r\n            }\n            else {\n                //This will be executed if a uid is already stored in local storage indicating that we do not have a first time user\n                //Therefore we will skip the login and daily questions page and jump straight to our main page of the app.\n                this.customalert(\"Please navigate to the tracker page (the middle tab) and fill out your responses to the daily questions.\", \"User Note\");\n                this.navCtrl.setRoot(TabsPage); // go to tracker page               \r\n            }\n        });\n\n    }\n\n    public CreateAccount() {\n        // lines below grab the username and password from the form. \r\n        var username = (<HTMLInputElement>document.getElementsByName(\"username\")[1]).value;\r\n        var password = (<HTMLInputElement>document.getElementsByName(\"password\")[1]).value;\r\n        var emailID = (<HTMLInputElement>document.getElementsByName(\"emailID\")[1]).value;\n\n        //For debugging purposes\n        console.log(username);\n        console.log(password);\n        console.log(emailID);\n\n        //check to make sure data is entered in correctly to all fields.\n        if ((username == ''\n            && password == ''\n            && emailID == '')\n            || (username == undefined\n            && password == undefined\n            && emailID == undefined))\n        {\n            this.customalert(\"Please fill out the username, password, and random email ID fields\", \"Cannot Submit\");\r\n        }\n        else if ((username == ''\n            && password == '')\n            || (username == undefined\n            && password == undefined))\n        {\n            this.customalert(\"Please fill out the username and password fields\", \"Cannot Submit\");\r\n        }\n        else if ((username == ''\n            && emailID == '')\n            || (username == undefined\n                && emailID == undefined))\n        {\n            this.customalert(\"Please fill out the username and random email ID fields\", \"Cannot Submit\");\r\n        }\n        else if ((password == ''\n            && emailID == '')\n            || (password == undefined\n                && emailID == undefined))\n        {\n            this.customalert(\"Please fill out the password and random email ID fields\", \"Cannot Submit\");\r\n        }\n        else if ((password == '')\n            || (password == undefined))\n        {\n            this.customalert(\"Please fill out the password field\", \"Cannot Submit\");\r\n        }\n        else if ((username == '')\n            || (username == undefined))\n        {\n            this.customalert(\"Please fill out the username field\", \"Cannot Submit\");\r\n        }\n        else if ((emailID == '')\n            || (emailID == undefined))\n        {\n            this.customalert(\"Please fill out the random email ID field\", \"Cannot Submit\");\r\n        }\n        else\n        {\n            //for security reason we ask that both username and password are 8 characters or greater.\n            if ((username.length < 8) && (password.length < 8))\n            {\n                this.customalert(\"Please make sure both username and password are 8 characters or greater\", \"Cannot Submit\");\r\n            }\n            else if (username.length < 8)\n            {\n                this.customalert(\"Please make sure the username is 8 characters or greater\", \"Cannot Submit\");\r\n            }\n            else if (password.length < 8)\n            {\n                this.customalert(\"Please make sure the password is 8 characters or greater\", \"Cannot Submit\");\r\n            }\n            else\n            {\n                //Hash the username and password.\n                var usernameHash = Md5.hashStr(username);\n                var passwordHash = Md5.hashStr(password);\n                \n                //store the hashed username and password in local storage\n                this.storage.set('usernameHash', usernameHash);\n                this.storage.set('passwordHash', passwordHash);\n\n                //send data to the server.\n                this.check_EmailID(emailID, usernameHash, passwordHash);\n\n                //for debugging purposes the following code can be used to see what is stored in all variables.\n                //this.customalert(\"Variables: \" + emailID + \" \" + username + \" \" + password + \" \" + usernameHash + \" \" + passwordHash, \"Results\");\r\n            }\r\n        }\r\n    }\n\n    public check_EmailID(emailID, usernameHash, passwordHash)\n    {\n        // http get requests. Gets the username and password you entered. Returns a json object with a message \"User successfully logged in\"\r\n        // goes to the ReportPage is everything is okay. \r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/auth.php?emailID=\" + emailID + \"&username=\" + usernameHash + \"&pass=\" + passwordHash;\n        // this line sends to the url above\n\tvar response;\n\tthis.http.get(url).map((response) => {\n\n\t\tvar Obj = response.json();\n\t\tif (response.status == 200 && Obj.error == false && /*Obj.message == \"User email random ID found\"*/ Obj.message != undefined) {\n\t\t\t//This should work to store the uid as long as it is correctly passed back from the server in the object message component\n                \tthis.storage.set('uid', Obj.message);\n\n                \t//after this we should get something back from the server giving us the uid which will then be stored in local storage on the app.\n                \t//Then we can jump to the onBoarding questions page of the app.\n\n                \tthis.customalert(\"Please fill out your responses to the onBoarding questions as your responses are crucial for proper app execution\", \"User Note\");\n                \tthis.navCtrl.setRoot(OnBoardingPage); // go to onBoarding questions page\n\t\t}\n\t\telse if (Obj.message != undefined) {\n\t\t\tthis.customalert(Obj.message, \"Error\");\n\t\t}\n\t\telse {\n\t\t\tthis.customalert(\"User email random ID not found. Please be sure the email random ID was entered in correctly\", \"Error\");\n\t\t}\n\n            }).subscribe();\n\n    }\n\n    public GoToLogin() {\n\t    this.navCtrl.setRoot(LoginPage);\n    }\n\n    // a custom alert I have made with ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/createAccount/createAccount.ts","/*\r\nTitle: onBoarding.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/3/2017\r\n\r\nPurpose: This code allows the user to enter in their responses to the onBoarding questions in the app and these responses are then sent and stored in the server.\r\n\r\nInput:\r\n    uid: This comes from local storage and is given to the app by the server originally.\r\n    birthday\r\n    cycleLength\r\n    periodLength\r\n    birthControlType\r\n    lastPeriod\r\n    status\r\n    time\r\n    pregnant\r\n    reproductiveDisorder\r\n\r\nOutput:\r\n    Success:\r\n        onBoarding questions columns changed for user.\r\n        Success message sent to the app\r\n        App is then linked back to the main page.\r\n\r\n    Failure:\r\n        Failure message sent to the app. This could either be that the server didn't recieve the data or that the user failed to fill out a necessary field for\r\n        data to be sent.\r\n*/\r\n\r\n//Imports needed for correct initialization.\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Storage } from '@ionic/storage';\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\n@Component({\r\n    selector: 'page-onBoarding',\r\n    templateUrl: 'onBoarding.html'\r\n})\r\nexport class OnBoardingPage {\r\n    // initializing variables and their types \r\n    birthday: string;   \r\n    cycleLength: string = '1';\r\n    periodLength: string = '1';   \r\n    birthControl: string[];   //A string array of unknown size\r\n    lastPeriod: string;\r\n    status: string;\r\n    time: string;\r\n    pregnant: string;\r\n    reproductiveDisorders: string;    //Will be \"None\" if the toggleDisorders button is false.\r\n\r\n    //Boolean toggle button for whether or not the user has a reproductive disorder and needs to enter in additonal info\r\n    toggleDisorders: boolean = false;\r\n\r\n    //just added the private storage stuff to this.\r\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private http: Http, private storage: Storage) {\r\n    }\r\n\r\n    //This function is called if our toggle button is true to allow the user to enter in their reproductive disorder\r\n    public Show() {\r\n        var reproductiveDisorders = document.getElementById('reproductiveDisorders');\r\n        reproductiveDisorders.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if our toggle button is false hiding the reporductive disorder input field\r\n    public Hide() {\r\n        var reproductiveDisorders = document.getElementById('reproductiveDisorders');\r\n        reproductiveDisorders.style.visibility = 'hidden';\r\n    }\r\n\r\n    //Function used for our toggle button to either show or hide the reproductive disorder input field and allow for user input.\r\n    public ToggleDisorders() {\r\n        console.log(\"ToggleDisorders Loading....\");\r\n        if (this.toggleDisorders == false) {\r\n            //Toggle button is changed from false to true\r\n            this.toggleDisorders = true;\r\n            console.log(this.toggleDisorders);\r\n            if (this.toggleDisorders == true) {\r\n                //If the toggle button is pressed to true then our show function is called to allow the user to enter in a reproductive disorder.\r\n                this.Show();\r\n            }\r\n        } else {\r\n            this.toggleDisorders = false;\r\n            //Toggle button is changed from true to false\r\n            console.log(this.toggleDisorders);\r\n            if (this.toggleDisorders == false) {\r\n                //If the toggle button is not pressed to true then our hide function is called to hide the reproductive disorder input field.\r\n                this.Hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Function called if the submit button is pressed. \r\n    //Properly stores all variables and will send data to the server.\r\n    //If a form field is missing an error message will be returned asking the user to go back through the form and fill it out properly.\r\n    public SubmitForm() { // Form submitted to the server for email deployment. \r\n        this.storage.get('uid').then((data) => {\r\n        \r\n                var uid = data;\r\n\r\n                //Function to see if the birthControl array contains any hormonal birth control types\r\n                //If a hormonal birth control type is used returns hormonal, if not returns not hormonal.\r\n                function DetermineType(bc: string[]) {\r\n                    if (bc == undefined)\r\n                    { return \"No Answer\"; }\r\n                    else if (bc.length == 0)\r\n                    { return \"No Answer\"; }\r\n                    else if (bc.indexOf(\"The Pill\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else if (bc.indexOf(\"IUD (Intrauterine Device)\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else if (bc.indexOf(\"Contraceptive Implant\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else if (bc.indexOf(\"Contraceptive Injections\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else if (bc.indexOf(\"Vaginal Ring\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else if (bc.indexOf(\"The Patch\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else if (bc.indexOf(\"Other (would include emergency contraceptive/morning after pills, sterilization)\") > -1)\r\n                    { return \"Hormonal\"; }\r\n                    else\r\n                    { return \"Not Hormonal\"; }\r\n                };\r\n\r\n                //Getting all the variables entered in by the user and storing them properly\r\n                var birthday = this.birthday;\r\n                var cycleLength = this.cycleLength;\r\n                var periodLength = this.periodLength;\r\n                var birthControl = this.birthControl;\r\n                var lastPeriod = this.lastPeriod;\r\n                var status = this.status;\r\n                var time = this.time;\r\n                var pregnant = this.pregnant;\r\n                var reproductiveDisorder;\r\n\r\n                //reproductiveDisorder is set to \"None\" if the toggle button is false indicating that the user has no reproductive disorders\r\n                if (this.toggleDisorders == true) {\r\n                    reproductiveDisorder = this.reproductiveDisorders;\r\n                }\r\n                else {\r\n                    reproductiveDisorder = \"None\";\r\n                }\r\n\r\n                //birthControlType is the variable sent to server and it is determined through the DetermineType function which takes in the birthControl string array.\r\n                var birthControlType = DetermineType(birthControl);\r\n\r\n                //for debugging purposes\r\n                console.log(uid);\r\n                console.log(birthday);\r\n                console.log(cycleLength);\r\n                console.log(periodLength);\r\n                console.log(birthControl);\r\n                console.log(lastPeriod);\r\n                console.log(status);\r\n                console.log(time);\r\n                console.log(pregnant);\r\n                console.log(reproductiveDisorder);\r\n                console.log(birthControlType);\r\n\r\n                var form_object = {  // this  is the form object sent to the server. json format\r\n                    uid: uid,\r\n                    birthday: birthday,\r\n                    cycleLength: cycleLength,\r\n                    periodLength: periodLength,\r\n                    birthControlType: birthControlType,\r\n                    lastPeriod: lastPeriod,\r\n                    status: status,\r\n                    time: time,\r\n                    pregnant: pregnant,\r\n                    reproductiveDisorder: reproductiveDisorder\r\n                };\r\n\r\n                // A check to make sure that all the data is filled in before the user submits the form.\r\n                //If any data is missing then an error message is output to the screen asking the user to go back through the form and fill out the missing field.\r\n                if ((birthday == '' ||\r\n                    cycleLength == '' ||\r\n                    periodLength == '' ||\r\n                    lastPeriod == '' ||\r\n                    status == '' ||\r\n                    time == '' ||\r\n                    pregnant == '' ||\r\n                    birthControlType == 'No Answer')\r\n                    || (birthday == undefined\r\n                        || cycleLength == undefined\r\n                        || periodLength == undefined\r\n                        || birthControl == undefined\r\n                        || lastPeriod == undefined\r\n                        || status == undefined\r\n                        || time == undefined\r\n                        || pregnant == undefined)) {\r\n\t\t    var missingDataArray = new Array();\r\n                    if ((birthday == '') || (birthday == undefined)) {\r\n\t\t\tmissingDataArray.push(\"birthday question\");\r\n                    }\r\n                    if ((cycleLength == '') || (cycleLength == undefined)) {\r\n\t\t\tmissingDataArray.push(\"cycle length question\");\r\n                    }\r\n                    if ((periodLength == '') || (periodLength == undefined)) {\r\n\t\t\tmissingDataArray.push(\"period length question\");\r\n                    }\r\n                    if (birthControlType == 'No Answer') {\r\n\t\t\tmissingDataArray.push(\"birth control type question\");\r\n                    }\r\n                    if ((lastPeriod == '') || (lastPeriod == undefined)) {\r\n\t\t\tmissingDataArray.push(\"last period date question\");\r\n                    }\r\n                    if ((status == '') || (status == undefined)) {\r\n\t\t\tmissingDataArray.push(\"relationship status question\");\r\n                    }\r\n                    if ((time == '') || (time == undefined)) {\r\n\t\t\tmissingDataArray.push(\"time of day question\");\r\n                    }\r\n                    if ((pregnant == '') || (pregnant == undefined)) {\r\n\t\t\tmissingDataArray.push(\"pregnancy question\");\r\n                    }\r\n\t\t    var missingDataAlert = \"Please fill out the \";\r\n\t\t    for (var i = 0; i < missingDataArray.length; i++) {\r\n\t\t\tmissingDataAlert = missingDataAlert.concat(missingDataArray[i]);\r\n\t\t\tif (i != (missingDataArray.length - 1)) {\r\n\t\t\t\tmissingDataAlert = missingDataAlert.concat(\", \");\r\n\t\t\t}\r\n\t \t    }\r\n\t\t    this.customalert(missingDataAlert, \"Cannot Submit\");\r\n                }\r\n\r\n                else {\r\n                    //A check to see if the toggle button has been pressed and to ensure the user has entered in some reroductive disorder before the form can be submitted.\r\n                    //If not an error message is output to the user.\r\n                    if (this.toggleDisorders == true) {\r\n                        if ((reproductiveDisorder == '') || (reproductiveDisorder == undefined)) {\r\n                            this.customalert(\"Please fill out the reproductive disorder question as you said 'yes' to having a disorder\", \"Cannot Submit\");\r\n                        }\r\n                        else {\r\n                            //storing the repsonses to the onBoarding questions in local storage\r\n                            this.storage.set('birthday', birthday);\r\n                            this.storage.set('cycleLength', cycleLength);\r\n                            this.storage.set('periodLength', periodLength);\r\n                            this.storage.set('birthControl', birthControl);\r\n                            this.storage.set('birthControlType', birthControlType);\r\n                            this.storage.set('lastPeriod', lastPeriod);\r\n                            this.storage.set('status', status);\r\n                            this.storage.set('time', time);\r\n                            this.storage.set('pregnant', pregnant);\r\n                            this.storage.set('reproductiveDisorder', reproductiveDisorder);\r\n\r\n                            this.post_onBoarding(form_object);\r\n                            //This can be used to check the value of all variables and ensure that everything is being stored correctly.\r\n                            /*this.customalert(\"Variables: \" + birthday + \" \" + cycleLength + \" \" + periodLength + \" \" + birthControlType + \" \" + lastPeriod + \" \"\r\n                                + status + \" \" + time + \" \" + pregnant + \" \" + reproductiveDisorder, \"Error\");*/\r\n                        }\r\n                    }\r\n                    else {\r\n                        //storing the repsonses to the onBoarding questions in local storage\r\n                        //Variable names in local storage: birthday, cycleLength, periodLength\r\n                        this.storage.set('birthday', birthday);\r\n                        this.storage.set('cycleLength', cycleLength);\r\n                        this.storage.set('periodLength', periodLength);\r\n                        this.storage.set('birthControl', birthControl);\r\n                        this.storage.set('birthControlType', birthControlType);\r\n                        this.storage.set('lastPeriod', lastPeriod);\r\n                        this.storage.set('status', status);\r\n                        this.storage.set('time', time);\r\n                        this.storage.set('pregnant', pregnant);\r\n                        this.storage.set('reproductiveDisorder', reproductiveDisorder);\r\n\r\n                        this.post_onBoarding(form_object);\r\n                        //This can be used to check the value of all variables and ensure that everything is being stored correctly.\r\n                        /*this.customalert(\"Variables: \" + birthday + \" \" + cycleLength + \" \" + periodLength + \" \" + birthControlType + \" \" + lastPeriod + \" \"\r\n                            + status + \" \" + time + \" \" + pregnant + \" \" + reproductiveDisorder + \" \" + uid, \"Error\");*/\r\n                    }\r\n                }\r\n        });\r\n    }\r\n  \r\n    // post_onBoarding\r\n    // send HTTP post request to the server to update\r\n    // onBoard answers to user table for this uid\r\n    // input:\r\n    //   (see form_object above)\r\n    //   object with all onBoard answers, uid\r\n    // output:\r\n    //   success: obj.error field set false by server\r\n    //     onBoard fields updated in user table for this uid,\r\n    //     alert to user,\r\n    //     link back to main page of app.\r\n    //   failure: obj.error field set to true by server\r\n    //     alert to user \r\n    public post_onBoarding(onboard_data) {\r\n        // Server chnage onBoard handler url (changeOnboard.php)\r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/changeOnboard.php\"\r\n        console.log(\"in post onboard\")\r\n\r\n        // Submit onboarding data to server\r\n        this.http.get(url, {params:onboard_data}).map((response) => {\r\n                var Obj = response.json();\r\n                console.log(Obj.error);\r\n                console.log(Obj.message)\r\n                if (Obj.error == false) { // successful completion\r\n                    console.log(\"post onboard success\");\r\n                    this.customalert(\"Please navigate to the tracker page (the middle tab) and fill out your responses to the daily questions\", \"User Note\");\r\n                    this.customalert(\"Your onboard data have been successfully submitted\", \"Success\");\r\n                    this.navCtrl.setRoot(TabsPage); // go to tracker page\r\n                    return true;\r\n                } else { // get request failed\r\n                    console.log(\"post onboard failure: \" + Obj.message);\r\n                    // user can do nothing about this. Error detected in\r\n                    // changeOnboard.php. In future report to error log\r\n                    return false;\r\n                }\r\n        }).subscribe();\r\n    } // end post_onBoarding\r\n\r\n    // a custom alert for ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/onBoarding/onBoarding.ts","/*\r\nTitle: launch.ts\r\nAuthor: Ionic 3 Calendar and additions by Dillon Pulliam\n    Info on the Ionic 3 Calendar can be found at the following: https://market.ionic.io/themes/ioniccalendar\r\nDate: 7/19/2017\r\n\r\nPurpose: This code allows initialization/launching of the calendar feature. \n\nAdditions that still need to be made: The calendar needs it's event markers to indicate the beginning and ending dates of a cycle but this feature hasn't\nbeen added yet.\r\n\r\nInput:\r\n\r\nOutput:\n    Calendar:\n        A calendar is output to the screen in month format.\n        A feature that hasn't been added yet but will be is event markers to the calendar that indicate when the user's cycle will begin and end.\r\n\n    Success:\r\n        Calendar is output to the screen.\r\n\r\n    Failure:\r\n        Calendar is not created successfully.\r\n*/\n\n//imports used for initialization\nimport { Component } from '@angular/core'\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\n\n@Component({\n    templateUrl: 'launch.html', \n})\nexport class Launch {\n\n    constructor(private nav: NavController, public navParams: NavParams, private alertCtrl: AlertController) {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/launch/launch.ts","/*\r\nTitle: login.ts\r\nAuthor: Sydney Norman\r\nDate: 11/7/2017\r\n\r\nPurpose: This code asks the user for their username and password in order to be able to jump to the main application.\r\n\r\nInput:\r\n    username: Hashed and compared to the hashed version of the username stored in local storage when the original login page was accessed\r\n    password: Hashed and compared to the hashed version of the password stored in local storage when the original login page was accessed\r\n\r\nOutput:\r\n    Success:\r\n        Username and password hashed versions match those stored in database.\r\n\r\n    Failure:\r\n        Error message sent to the user that the hashed version of username or password didn't match and the settings page is not accessed.\r\n*/\r\n\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { CreateAccountPage } from '../createAccount/createAccount';\r\nimport { TabsPage } from '../tabs/tabs';\r\nimport { OnBoardingPage } from '../onBoarding/onBoarding';\r\n\r\n@Component({\r\n    selector: 'page-login',\r\n    templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n\r\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private http: Http, private storage: Storage) {\r\n    }\r\n\r\n    public Login() {\r\n\t// lines below grab the username and password from the form.\r\n\tvar username = (<HTMLInputElement>document.getElementsByName(\"username\")[1]).value;\r\n\tvar password = (<HTMLInputElement>document.getElementsByName(\"password\")[1]).value;\r\n\r\n\tconsole.log(username);\r\n\tconsole.log(password);\r\n\r\n\t//Hash the username and password input by the user.\r\n\tvar usernameHash = Md5.hashStr(username);\r\n\tvar passwordHash = Md5.hashStr(password);\t\r\n\r\n\tconsole.log(usernameHash);\r\n\tconsole.log(passwordHash);\r\n\r\n\t// http get requests. Gets the username and password you entered. Returns a json object with a message \"User successfully logged in\"\r\n        // goes to the ReportPage is everything is okay.\r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/login.php?username=\" + usernameHash + \"&pass=\" + passwordHash;\r\n        // this line sends to the url above\r\n        var response;\r\n        this.http.get(url).map((response) => {\r\n\r\n                var Obj = response.json();\r\n                if (Obj.error == false && Obj.message != undefined) {\r\n                        this.storage.set('usernameHash', usernameHash);\r\n\t\t\tthis.storage.set('passwordHash', passwordHash);\r\n\t\t\tthis.storage.set('uid', Obj.uid);\r\n\r\n\t\t\tthis.customalert(\"Login Successful\", \"Success\");\r\n\r\n\t\t\t// Checks to see if user has already entered onBoarding information\r\n\t\t\tif (Obj.onboard_status == 1) {\r\n\t\t\t\t// Add Onboarding Data to Local Storage\r\n\t\t\t\tthis.storage.set('birthday', Obj.birthday);\r\n\t\t\t\tthis.storage.set('cycleLength', Obj.cycleLength);\r\n\t\t\t\tthis.storage.set('periodLength', Obj.periodLength);\r\n\t\t\t\tthis.storage.set('birthControl', Obj.birthControlType);\r\n\t\t\t\tthis.storage.set('lastPeriod', Obj.lastPeriod);\r\n\t\t\t\tthis.storage.set('status', Obj.status);\r\n\t\t\t\tthis.storage.set('time', Obj.time);\r\n\t\t\t\tthis.storage.set('pregnant', Obj.pregnant);\r\n\t\t\t\tthis.storage.set('reproductiveDisorder', Obj.reproductiveDisorder);\r\n\t\t\t\tthis.navCtrl.setRoot(TabsPage); // go to tabs page\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// User hasn't entered onboarding info yet, redirect\r\n                        \tthis.navCtrl.setRoot(OnBoardingPage); // go to onboarding page\r\n\t\t\t}\r\n                }\r\n                else if (Obj.message != undefined) {\r\n                \tthis.customalert(Obj.message, \"Error\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.customalert(\"Unknown error occurred.\", \"Error\");\r\n\t\t}\r\n\r\n            }).subscribe();\r\n\r\n    }\r\n\r\n    public GoToCreateAccount() {\r\n\tthis.navCtrl.setRoot(CreateAccountPage);\r\n    }\r\n\r\n    // a custom alert I have made with ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 115;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 115\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 157;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 157\n// module chunks = 0","/*\r\nTitle: settingsLogin.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/16/2017\r\n\r\nPurpose: This code asks the user for their username and password in order to be able to jump to the settings page where responses and updates to\nonBoarding questions can be made\r\n\r\nInput:\r\n    username: Hashed and compared to the hashed version of the username stored in local storage when the original login page was accessed\r\n    password: Hashed and compared to the hashed version of the password stored in local storage when the original login page was accessed\r\n\r\nOutput:\r\n    Success:\r\n        Username and password hashed versions match those stored in local storage and the settings page is accessed.\n\r\n    Failure:\r\n        Error message sent to the user that the hashed version of username or password didn't match and the settings page is not accessed.\r\n*/\n\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { SettingsPage } from '../settings/settings';\n//This will eventually be changed to our calendar!!!\n/*import { OnBoardingPage } from '../onBoarding/onBoarding';\nimport { TrackerPage } from '../tracker/tracker';\nimport { TabsPage } from '../tabs/tabs';*/\r\n\r\n@Component({\r\n    selector: 'page-settingsLogin',\r\n    templateUrl: 'settingsLogin.html',\r\n})\r\nexport class SettingsLoginPage {\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private storage: Storage) {\n    }\n\n    public GoToSettings() {\n        //The following lines of code get the most recent answers to the onBoarding questions (the settings) and loads the results stored in local storage.\n        //These results are then passed in parameters to the the settings page once it is accessed so the currents settings can easily be output to the screen \n        //within the html page. This is a work-around for asynchronous timing issues that come with typescript.\n        this.storage.get('birthday').then((data1) => {\n            this.storage.get('cycleLength').then((data2) => {\n                this.storage.get('periodLength').then((data3) => {\n                    this.storage.get('birthControl').then((data4) => {\n                        this.storage.get('lastPeriod').then((data5) => {\n                            this.storage.get('status').then((data6) => {\n                                this.storage.get('time').then((data7) => {\n                                    this.storage.get('pregnant').then((data8) => {\n                                        this.storage.get('reproductiveDisorder').then((data9) => {\n                                            this.storage.get('usernameHash').then((data10) => {\n                                                this.storage.get('passwordHash').then((data11) => {\n                                                    this.storage.get('birthControlType').then((data12) => {\n                                                        //Create variables to store the seetings values from local storage in\n                                                        var oldBirthday = data1;\n                                                        var oldCycleLength = data2;\n                                                        var oldPeriodLength = data3;\n                                                        var oldBirthControl = data4;\n                                                        var oldBirthControlType = data12;\n                                                        var oldLastPeriod = data5;\n                                                        var oldStatus = data6;\n                                                        var oldTime = data7;\n                                                        var oldPregnant = data8;\n                                                        var oldReproductiveDisorder = data9;\n                                                        var oldUsernameHash = data10;\n                                                        var oldPasswordHash = data11;\n\n                                                        // lines below grab the username and password from the form.\r\n                                                        var username = (<HTMLInputElement>document.getElementsByName(\"username\")[1]).value;\r\n                                                        var password = (<HTMLInputElement>document.getElementsByName(\"password\")[1]).value;\n\n                                                        //For debugging purposes\n                                                        console.log(username);\n                                                        console.log(password);\n\n                                                        if ((username == ''\n                                                            && password == '')\n                                                            || (username == undefined\n                                                                && password == undefined)) {\n                                                            this.customalert(\"Please fill out the username and password fields\", \"Cannot Go To Settings\");\r\n                                                        }\n                                                        else if ((password == '')\n                                                            || (password == undefined)) {\n                                                            this.customalert(\"Please fill out the password field\", \"Cannot Go To Settings\");\r\n                                                        }\n                                                        else if ((username == '')\n                                                            || (username == undefined)) {\n                                                            this.customalert(\"Please fill out the username field\", \"Cannot Go To Settings\");\r\n                                                        }\n                                                        else {\n                                                            //Hash the username and password input by the user.\n                                                            var usernameHash = Md5.hashStr(username);\n                                                            var passwordHash = Md5.hashStr(password);\n\n                                                            if ((usernameHash != oldUsernameHash) && (passwordHash != oldPasswordHash)) {\n                                                                this.customalert(\"The username and password entered are incorrect.\", \"Cannot Go To Settings\");\r\n                                                            }\n                                                            else if (usernameHash != oldUsernameHash) {\n                                                                this.customalert(\"The username entered is incorrect.\", \"Cannot Go To Settings\");\r\n                                                            }\n                                                            else if (passwordHash != oldPasswordHash) {\n                                                                this.customalert(\"The password entered is incorrect.\", \"Cannot Go To Settings\");\r\n                                                            }\n                                                            else {\n                                                                //everything entered in is correct.\n                                                                //Push the settings page on top of the settingsLogin page and pass in the current settings values \n                                                                //as parameters which were loaded from local storage and stored in variables above.\n                                                                this.navCtrl.push(SettingsPage, {\n                                                                    birthdayPassed: oldBirthday,\n                                                                    cycleLengthPassed: oldCycleLength,\n                                                                    periodLengthPassed: oldPeriodLength,\n                                                                    birthControlPassed: oldBirthControl,\n                                                                    lastPeriodPassed: oldLastPeriod,\n                                                                    statusPassed: oldStatus,\n                                                                    timePassed: oldTime,\n                                                                    pregnantPassed: oldPregnant,\n                                                                    reproductiveDisorderPassed: oldReproductiveDisorder,\n                                                                    birthControlTypePassed: oldBirthControlType\r\n                                                                })\r\n                                                            }\n                                                        }\n                                                    });\n                                                });\n                                            });\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\n\n    // a custom alert I have made with ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settingsLogin/settingsLogin.ts","/*\r\nTitle: settings.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/16/2017\r\n\r\nPurpose: This code allows the user to view and/or update their responses to the onBoarding questions in the app.\r\nThese updated responses are then sent and stored in the server.\r\n\r\nInput:\r\n    uid: This comes from local storage and is given to the app by the server originally.\r\n    birthday: same as original\r\n    cycleLength: same as original\r\n    periodLength: same as original\r\n    birthControlType: can be updated\r\n    lastPeriod: same as original\r\n    status: can be updated\r\n    time: can be updated\r\n    pregnant: can be updated\r\n    reproductiveDisorder: can be updated\r\n\r\nOutput:\r\n    Success:\r\n        onBoarding questions columns are updated for user.\r\n        Success message sent to the app\r\n        App is then linked back to the main page.\r\n\r\n    Failure:\r\n        Failure message sent to the app. This could either be that the server didn't recieve the data or that the user failed to fill out a necessary field for\r\n        data to be sent.\r\n*/\r\n\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Storage } from '@ionic/storage';\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\n@Component({\r\n  selector: 'page-settings',\r\n  templateUrl: 'settings.html'\r\n})\r\nexport class SettingsPage {\r\n\r\n    //Variables used to hold the parameters passed in from settingsLogin.ts\r\n    //These variables hold the original or latest update to the onBoarding Questions\r\n    public birthdayParam;\r\n    public cycleLengthParam;\r\n    public periodLengthParam;\r\n    public birthControlParam;\r\n    public birthControlTypeParam;\r\n    public lastPeriodParam;\r\n    public statusParam;\r\n    public timeParam;\r\n    public pregnantParam;\r\n    public reproductiveDisorderParam;\r\n\r\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, public http: Http, private storage: Storage) {\r\n        \r\n        //Getting parameters passed in from settingsLogin.ts and saving them in the proper variables\r\n        this.birthdayParam = navParams.get(\"birthdayPassed\");\r\n        this.cycleLengthParam = navParams.get(\"cycleLengthPassed\");\r\n        this.periodLengthParam = navParams.get(\"periodLengthPassed\");\r\n        this.birthControlParam = navParams.get(\"birthControlPassed\");\r\n        this.birthControlTypeParam = navParams.get(\"birthControlTypePassed\");\r\n        this.lastPeriodParam = navParams.get(\"lastPeriodPassed\");\r\n        this.statusParam = navParams.get(\"statusPassed\");\r\n        this.timeParam = navParams.get(\"timePassed\");\r\n        this.pregnantParam = navParams.get(\"pregnantPassed\");\r\n        this.reproductiveDisorderParam = navParams.get(\"reproductiveDisorderPassed\");\r\n    }\r\n\r\n     // initializing variables and their types if the user makes any adjustments to their settings.\r\n    birthControlUpdateResult: string[];   \r\n    statusUpdateResult: string;\r\n    timeUpdateResult: string;\r\n    pregnantUpdateResult: string;\r\n    reproductiveDisorderUpdate: string;   \r\n\r\n    //Boolean toggle buttons used in the HTML page.\r\n    toggleDisorderUpdate: boolean = false;\r\n    toggleBirthControlUpdate: boolean = false;\r\n    toggleStatusUpdate: boolean = false;\r\n    toggleTimeUpdate: boolean = false;\r\n    togglePregnantUpdate: boolean = false;\r\n\r\n    //This function is called if our toggle button is true to allow the user to enter in their reproductive disorder\r\n    public ShowDisorder() {\r\n        var reproductiveDisorderUpdate = document.getElementById('reproductiveDisorderUpdate');\r\n        reproductiveDisorderUpdate.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if our toggle button is true to allow the user to enter in their birth control\r\n    public ShowBirthControl() {\r\n        var birthControlUpdate1 = document.getElementById('birthControlUpdate1');\r\n        birthControlUpdate1.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if our toggle button is true to allow the user to enter in their relationship status\r\n    public ShowStatus() {\r\n        var statusUpdate1 = document.getElementById('statusUpdate1');\r\n        statusUpdate1.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if our toggle button is true to allow the user to enter in their time to enter in responses to daily questions\r\n    public ShowTime() {\r\n        var timeUpdate1 = document.getElementById('timeUpdate1');\r\n        timeUpdate1.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if our toggle button is true to allow the user to enter in their intention on whether or not to become pregnant\r\n    public ShowPregnant() {\r\n        var pregnantUpdate1 = document.getElementById('pregnantUpdate1');\r\n        pregnantUpdate1.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if a toggle button is true to allow the user to make an update request to the server.\r\n    public ShowButton() {\r\n        var updateButton = document.getElementById('updateButton');\r\n        updateButton.style.visibility = 'visible';\r\n    }\r\n\r\n    //This function is called if our toggle button is false hiding the reproductive disorder field\r\n    public HideDisorder() {\r\n       var reproductiveDisorderUpdate = document.getElementById('reproductiveDisorderUpdate');\r\n       reproductiveDisorderUpdate.style.visibility = 'hidden';\r\n    }\r\n\r\n    //This function is called if our toggle button is false hiding the birth control field\r\n    public HideBirthControl() {\r\n        var birthControlUpdate1 = document.getElementById('birthControlUpdate1');\r\n        birthControlUpdate1.style.visibility = 'hidden';\r\n    }\r\n\r\n    //This function is called if our toggle button is set to false hiding the relationship status field\r\n    public HideStatus() {\r\n        var statusUpdate1 = document.getElementById('statusUpdate1');\r\n        statusUpdate1.style.visibility = 'hidden';\r\n    }\r\n\r\n    //This function is called if our toggle button is false hiding the time of day to input responses to daily questions field\r\n    public HideTime() {\r\n        var timeUpdate1 = document.getElementById('timeUpdate1');\r\n        timeUpdate1.style.visibility = 'hidden';\r\n    }\r\n\r\n    //This function is called if our toggle button is false hiding the intention to be pregnant or not field\r\n    public HidePregnant() {\r\n        var pregnantUpdate1 = document.getElementById('pregnantUpdate1');\r\n        pregnantUpdate1.style.visibility = 'hidden';\r\n    }\r\n\r\n    //This function is called is our toggle button is false hiding the post update button\r\n    public HideButton() {\r\n        var updateButton = document.getElementById('updateButton');\r\n        updateButton.style.visibility = 'hidden';\r\n    }\r\n\r\n    //Function used for our toggle button to either show or hide the reproductive disorder input field and allow for user input.\r\n    public ToggleDisorderUpdate() {\r\n        console.log(\"ToggleDisorders Loading....\");\r\n        if (this.toggleDisorderUpdate == false) {\r\n            //Toggle button is changed from false to true\r\n            this.toggleDisorderUpdate = true;\r\n            console.log(this.toggleDisorderUpdate);\r\n            if (this.toggleDisorderUpdate == true) {\r\n                //If the toggle button is pressed to true then our show function is called to allow the user to enter in a reproductive disorder.\r\n                this.ShowDisorder();\r\n                this.ShowButton();\r\n            } \r\n        }\r\n        else {\r\n            this.toggleDisorderUpdate = false;\r\n            //Toggle button is changed from true to false\r\n            console.log(this.toggleDisorderUpdate);\r\n            if (this.toggleDisorderUpdate == false) {\r\n                //If the toggle button is not pressed to true then our hide function is called to hide the reproductive disorder input field.\r\n                this.HideDisorder();\r\n                if (this.toggleStatusUpdate == false && this.toggleTimeUpdate == false && this.togglePregnantUpdate == false && this.toggleBirthControlUpdate == false) {\r\n                    //If no toggle button is pressed to true then hide the submit button to the server called update feature.\r\n                    this.HideButton();\r\n                }\r\n            }\r\n         }\r\n    }\r\n\r\n    //Function used for our toggle button to either show or hide the birth control input field and allow for user input.\r\n    public ToggleBirthControlUpdate() {\r\n        console.log(\"ToggleBirthControl Loading....\");\r\n        if (this.toggleBirthControlUpdate == false) {\r\n            //Toggle button is changed from false to true\r\n            this.toggleBirthControlUpdate = true;\r\n            console.log(this.toggleBirthControlUpdate);\r\n            if (this.toggleBirthControlUpdate == true) {\r\n                //If the toggle button is pressed to true then our show function is called to allow the user to enter in birth control.\r\n                this.ShowBirthControl();\r\n                this.ShowButton();\r\n            }\r\n        }\r\n        else {\r\n            this.toggleBirthControlUpdate = false;\r\n            //Toggle button is changed from true to false\r\n            console.log(this.toggleBirthControlUpdate);\r\n            if (this.toggleBirthControlUpdate == false) {\r\n                //If the toggle button is not pressed to true then our hide function is called to hide the birth control input field.\r\n                this.HideBirthControl();\r\n                if (this.toggleStatusUpdate == false && this.toggleTimeUpdate == false && this.togglePregnantUpdate == false && this.toggleDisorderUpdate == false)\r\n                {\r\n                    //If no toggle button is pressed to true then hide the submit button to the server called update feature.\r\n                    this.HideButton();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Function used for our toggle button to either show or hide the relationship status input field and allow for user input.\r\n    public ToggleStatusUpdate() {\r\n        console.log(\"ToggleStatus Loading....\");\r\n        if (this.toggleStatusUpdate == false) {\r\n            //Toggle button is changed from false to true\r\n            this.toggleStatusUpdate = true;\r\n            console.log(this.toggleStatusUpdate);\r\n            if (this.toggleStatusUpdate == true) {\r\n                //If the toggle button is pressed to true then our show function is called to allow the user to enter in birth control.\r\n                this.ShowStatus();\r\n                this.ShowButton();\r\n            }\r\n        }\r\n        else {\r\n            this.toggleStatusUpdate = false;\r\n            //Toggle button is changed from true to false\r\n            console.log(this.toggleStatusUpdate);\r\n            if (this.toggleStatusUpdate == false) {\r\n                //If the toggle button is not pressed to true then our hide function is called to hide the relationship status input field.\r\n                this.HideStatus();\r\n                if (this.toggleBirthControlUpdate == false && this.toggleTimeUpdate == false && this.togglePregnantUpdate == false && this.toggleDisorderUpdate == false) {\r\n                    //If no toggle button is pressed to true then hide the submit button to the server called update feature.\r\n                    this.HideButton();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Function used for our toggle button to either show or hide the time of the day to input questions field and allow for user input.\r\n    public ToggleTimeUpdate() {\r\n        console.log(\"ToggleTime Loading....\");\r\n        if (this.toggleTimeUpdate == false) {\r\n            //Toggle button is changed from false to true\r\n            this.toggleTimeUpdate = true;\r\n            console.log(this.toggleTimeUpdate);\r\n            if (this.toggleTimeUpdate == true) {\r\n                //If the toggle button is pressed to true then our show function is called to allow the user to enter in time of the day to input daily questions.\r\n                this.ShowTime();\r\n                this.ShowButton();\r\n            }\r\n        }\r\n        else {\r\n            this.toggleTimeUpdate = false;\r\n            //Toggle button is changed from true to false\r\n            console.log(this.toggleTimeUpdate);\r\n            if (this.toggleTimeUpdate == false) {\r\n                //If the toggle button is not pressed to true then our hide function is called to hide the time to enter daily questions input field.\r\n                this.HideTime();\r\n                if (this.toggleStatusUpdate == false && this.toggleBirthControlUpdate == false && this.togglePregnantUpdate == false && this.toggleDisorderUpdate == false) {\r\n                    //If no toggle button is pressed to true then hide the submit button to the server called update feature.\r\n                    this.HideButton();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Function used for our toggle button to either show or hide the intention to be pregnant or not input field and allow for user input.\r\n    public TogglePregnantUpdate() {\r\n        console.log(\"TogglePregnant Loading....\");\r\n        if (this.togglePregnantUpdate == false) {\r\n            //Toggle button is changed from false to true\r\n            this.togglePregnantUpdate = true;\r\n            console.log(this.togglePregnantUpdate);\r\n            if (this.togglePregnantUpdate == true) {\r\n                //If the toggle button is pressed to true then our show function is called to allow the user to enter in if they are intending to become pregnant or not.\r\n                this.ShowPregnant();\r\n                this.ShowButton();\r\n            }\r\n        }\r\n        else {\r\n            this.togglePregnantUpdate = false;\r\n            //Toggle button is changed from true to false\r\n            console.log(this.togglePregnantUpdate);\r\n            if (this.togglePregnantUpdate == false) {\r\n                //If the toggle button is not pressed to true then our hide function is called to hide the intention to become pregnant or not input field.\r\n                this.HidePregnant();\r\n                if (this.toggleStatusUpdate == false && this.toggleTimeUpdate == false && this.toggleBirthControlUpdate == false && this.toggleDisorderUpdate == false) {\r\n                    //If no toggle button is pressed to true then hide the submit button to the server called update feature.\r\n                    this.HideButton();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Function that is called when the user presses the update button.\r\n    //This function will output an error message if a certain field is missing info and has not yet been filled in.\r\n    //If the update form is completed then the function will send the data to the server.\r\n    public UpdateForm() { // Form submitted to the server for email deployment. \r\n        //The following lines of code just load in the most recent answers to the onBoarding questions (called the settings) from local storage.\r\n        //This is necessary because any field that is not updated is still sent to the server with the most recent response to that question.\r\n        //This helped to make server side code easier since our forms sent are the exact same for this file as for onBoarding.ts\r\n        this.storage.get('uid').then((data) => {\r\n            this.storage.get('birthday').then((data1) => {\r\n                this.storage.get('cycleLength').then((data2) => {\r\n                    this.storage.get('periodLength').then((data3) => {\r\n                        this.storage.get('birthControl').then((data4) => {\r\n                            this.storage.get('lastPeriod').then((data5) => {\r\n                                this.storage.get('status').then((data6) => {\r\n                                    this.storage.get('time').then((data7) => {\r\n                                        this.storage.get('pregnant').then((data8) => {\r\n                                            this.storage.get('reproductiveDisorder').then((data9) => {\r\n                                                this.storage.get('birthControlType').then((data10) => {\r\n\r\n                                                    var uid = data;\r\n\r\n                                                    //Function to see if the birthControl array contains any hormonal birth control types\r\n                                                    //If a hormonal birth control type is used returns hormonal, if not returns not hormonal.\r\n                                                    function DetermineType(bc: string[]) {\r\n                                                        if (bc == undefined)\r\n                                                        { return \"No Answer\"; }\r\n                                                        else if (bc.length == 0)\r\n                                                        { return \"No Answer\"; }\r\n                                                        else if (bc.indexOf(\"The Pill\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else if (bc.indexOf(\"IUD (Intrauterine Device)\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else if (bc.indexOf(\"Contraceptive Implant\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else if (bc.indexOf(\"Contraceptive Injections\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else if (bc.indexOf(\"Vaginal Ring\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else if (bc.indexOf(\"The Patch\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else if (bc.indexOf(\"Other (would include emergency contraceptive/morning after pills, sterilization)\") > -1)\r\n                                                        { return \"Hormonal\"; }\r\n                                                        else\r\n                                                        { return \"Not Hormonal\"; }\r\n                                                    };\r\n\r\n                                                    //Getting all the variables entered in by the user and storing them properly.\r\n                                                    //If the toggle button is true then the the variable is set to the input field.\r\n                                                    //If the toggle button is not pressed then the variable is set to its old value from local storage.\r\n                                                    var birthControl;\r\n                                                    if (this.toggleBirthControlUpdate == true) {\r\n                                                        birthControl = this.birthControlUpdateResult;\r\n                                                    }\r\n                                                    else {\r\n                                                        birthControl = data4;\r\n                                                    }\r\n\r\n                                                    var status;\r\n                                                    if (this.toggleStatusUpdate == true) {\r\n                                                        status = this.statusUpdateResult;\r\n                                                    }\r\n                                                    else {\r\n                                                        status = data6;\r\n                                                    }\r\n\r\n                                                    var time;\r\n                                                    if (this.toggleTimeUpdate == true) {\r\n                                                        time = this.timeUpdateResult;\r\n                                                    }\r\n                                                    else {\r\n                                                        time = data7;\r\n                                                    }\r\n\r\n                                                    var pregnant;\r\n                                                    if (this.togglePregnantUpdate == true) {\r\n                                                        pregnant = this.pregnantUpdateResult;\r\n                                                    }\r\n                                                    else {\r\n                                                        pregnant = data8;\r\n                                                    }\r\n\r\n                                                    var reproductiveDisorder;\r\n                                                    if (this.toggleDisorderUpdate == true) {\r\n                                                        reproductiveDisorder = this.reproductiveDisorderUpdate;\r\n                                                    }\r\n                                                    else {\r\n                                                        reproductiveDisorder = data9;\r\n                                                    }\r\n\r\n                                                    //birthControlType is the variable sent to server and it is determined through the DetermineType function which takes in the birthControl string array.\r\n                                                    var birthControlType = DetermineType(birthControl);\r\n\r\n                                                    //for debugging purposes\r\n                                                    console.log(uid);\r\n                                                    console.log(birthControl);\r\n                                                    console.log(status);\r\n                                                    console.log(time);\r\n                                                    console.log(pregnant);\r\n                                                    console.log(reproductiveDisorder);\r\n                                                    console.log(birthControlType);\r\n\r\n                                                    var form_object = {  // this  is the form object sent to the server. json format\r\n                                                        uid: uid,\r\n                                                        birthday: data1,\r\n                                                        cycleLength: data2,\r\n                                                        periodLength: data3,\r\n                                                        birthControlType: birthControlType,\r\n                                                        lastPeriod: data5,\r\n                                                        status: status,\r\n                                                        time: time,\r\n                                                        pregnant: pregnant,\r\n                                                        reproductiveDisorder: reproductiveDisorder\r\n                                                    };\r\n\r\n                                                    // A check to make sure that all the data is filled in before the user submits the form.\r\n                                                    //If any data is missing then an error message is output to the screen asking the user to go back through the form and fill out the missing field.\r\n                                                    if (((status == '' && this.toggleStatusUpdate == true) ||\r\n                                                        (time == '' && this.toggleTimeUpdate == true) ||\r\n                                                        (pregnant == '' && this.togglePregnantUpdate == true) ||\r\n                                                        (reproductiveDisorder == '' && this.toggleDisorderUpdate == true) ||\r\n                                                        (birthControlType == 'No Answer' && this.toggleBirthControlUpdate == true))\r\n                                                        || ((birthControl == undefined && this.toggleBirthControlUpdate == true)\r\n                                                            || (reproductiveDisorder == undefined && this.toggleDisorderUpdate == true)\r\n                                                            || (status == undefined && this.toggleStatusUpdate == true)\r\n                                                            || (time == undefined && this.toggleTimeUpdate == true)\r\n                                                            || (pregnant == undefined && this.togglePregnantUpdate == true))) {\r\n                                                        if (birthControlType == 'No Answer' && this.ToggleBirthControlUpdate) {\r\n                                                            this.customalert(\"Please fill out the birth control question since its update button is toggled\", \"Cannot Update\");\r\n                                                        }\r\n                                                        if (((status == '') || (status == undefined)) && this.toggleStatusUpdate == true) {\r\n                                                            this.customalert(\"Please fill out the relationship status question since its update button is toggled\", \"Cannot Update\");\r\n                                                        }\r\n                                                        if (((time == '') || (time == undefined)) && this.toggleTimeUpdate == true) {\r\n                                                            this.customalert(\"Please fill out the time of the day you want to respond to daily questions since its update button is toggled\", \"Cannot Update\");\r\n                                                        }\r\n                                                        if (((pregnant == '') || (pregnant == undefined)) && this.togglePregnantUpdate == true) {\r\n                                                            this.customalert(\"Please fill out if you are intending to become pregnant or not since its update button is toggled\", \"Cannot Update\");\r\n                                                        }\r\n                                                        if (((reproductiveDisorder == '') || (reproductiveDisorder == undefined)) && this.toggleDisorderUpdate == true) {\r\n                                                            this.customalert(\"Please fill out the reproductive disorder question since its update button is toggled\", \"Cannot Update\");\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        //Updating the responses stored in local storage\r\n                                                        this.storage.set('birthControl', birthControl);\r\n                                                        this.storage.set('birthControlType', birthControlType);\r\n                                                        this.storage.set('status', status);\r\n                                                        this.storage.set('time', time);\r\n                                                        this.storage.set('pregnant', pregnant);\r\n                                                        this.storage.set('reproductiveDisorder', reproductiveDisorder);\r\n\r\n                                                        this.post_update(form_object);\r\n                                                        //This can be used to check the value of all variables and ensure that everything is being stored correctly.\r\n                                                        /*this.customalert(\"Variables: \" + data1 + \" \" + data2 + \" \" + data3 + \" \" + birthControlType + \" \" + data5 + \" \"\r\n                                                            + status + \" \" + time + \" \" + pregnant + \" \" + reproductiveDisorder, \"Error\");*/\r\n                                                    }\r\n                                                })\r\n                                            })\r\n                                        })\r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    // post_update\r\n    // send HTTP post request to the server to update\r\n    // onBoard answers to user table for this uid\r\n    // input:\r\n    //   (see form_object above)\r\n    //   object with all onBoard answers, uid\r\n    // output:\r\n    //   success: obj.error field set false by server\r\n    //     onBoard fields updated in user table for this uid,\r\n    //     alert to user,\r\n    //     link back to main page of app.\r\n    //   failure: obj.error field set to true by server\r\n    //     alert to user \r\n    public post_update(onboard_data) {\r\n        // Server chnage onBoard handler url (changeOnboard.php)\r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/changeOnboard.php\"\r\n        console.log(\"in post update\")\r\n\r\n        this.http.get(url, {params:onboard_data}).map((response) => {\r\n                var Obj = response.json();\r\n                console.log(Obj.error);\r\n                console.log(Obj.message)\r\n                if (Obj.error == false) {\r\n                        // get request success\r\n                        console.log(\"post update success\");\r\n\r\n                        this.customalert(\"Your onboard data has been successfully updated\", \"Success\");\r\n                        this.navCtrl.pop(SettingsPage); // go back to the settings login page as updates have been made.\r\n                        //Pops the settings page off the top of the stack as it was popped on top of settingsLogin when username and password were input.\r\n\r\n                        return true;\r\n                } else {\r\n                        // get request failed\r\n                        console.log(\"post update failure: \" + Obj.message);\r\n                        this.customalert(\"Failure to update your onboard data\", \"Failure\");\r\n                        return false;\r\n                }\r\n        }).subscribe();\t\r\n\r\n    } // end post_update\r\n\r\n    // a custom alert for ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","/*\r\nTitle: tracker.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/3/2017\r\n\r\nPurpose: This code allows the user to enter in their responses to the daily questions in the app and these responses are then sent and stored in the server.\r\n\r\nInput:\r\n    uid: This comes from local storage and is given to the app by the server originally.\r\n    date: Today's date\r\n    onPeriod\r\n    sexualInterest \r\n    sexualActivityNumber\r\n    emotionalCloseness\r\n    sexualRelationship\r\n    sexualLife\r\n    sexualArousal\r\n    sexualArousalConfidence\r\n    lubrication\r\n    lubricationMaintain\r\n    difficulty\r\n    satisfaction\r\n    discomfort\r\n\r\nOutput:\r\n    Success:\r\n        Tracker daily questions column added and answers stored for the current day for user.\r\n        Success message sent to the app\r\n        App is then linked back to the main page.\r\n\r\n    Failure:\r\n        Failure message sent to the app. This could either be that the server didn't recieve the data or that the user failed to fill out a necessary field for\r\n        data to be sent.\r\n*/\r\n\r\n//imports needed for correct initialization.\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n    selector: 'page-tracker',\r\n    templateUrl: 'tracker.html'\r\n})\r\nexport class TrackerPage {\r\n    //Variables used and their corresponding type\r\n    onPeriod: string;\r\n\r\n    sexualInterest: string = '1';\r\n\r\n    sexualAttitude: string;\r\n\r\n    sexualArousal: string;\r\n    climax: string;  \r\n    intensity: string;   \r\n    other: string;\r\n\r\n    //Boolean variables used for the toggle buttons\r\n    kissing: boolean = false;\r\n    caressing: boolean = false;\r\n    fondling: boolean = false;\r\n    masturbation: boolean = false;\r\n    oral: boolean = false;\r\n    anal: boolean = false;\r\n    vaginal: boolean = false;\r\n\r\n    // ** TODO **: start this out as true! whenever selected, make all others go to false\r\n    //             and don't allow user to type into other\r\n    none: boolean = false;\r\n\r\n    toggleSexualActivity: boolean = false;  // Overall indicator of whether we should expand the questions\r\n                                            // Based on the values of the above.\r\n    toggleClimax: boolean = false;\r\n\r\n    //Variables used for the Statistics tab\r\n    avgCycleLengthString: string = \"You do not currently have any completed Periods on record. Continue using the app to see your average cycle length.\";\r\n\r\n\r\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private http: Http, private storage: Storage) {\r\n    }\r\n\r\n   //While page is loading, query the server for the user's statistics using their uid.\r\n    ionViewDidEnter() {\r\n        console.log(\"Page loading...\");\r\n        this.storage.get('uid').then((data) => {\r\n            var uid = data;\r\n            var form_object = {  // this is the form object sent to the server.\r\n                    uid: uid,\r\n            }\r\n            console.log(uid);\r\n            this.get_statistics(form_object);\r\n        });\r\n\r\n    }\r\n\r\n    //Function used to show the 3rd set of daily questions if the 2nd toggle button has been set to true.\r\n    public Show_sexualArousalQuestion() {\r\n        var sexualArousalQuestion = document.getElementById('sexualArousalQuestion');\r\n        sexualArousalQuestion.style.display = 'inline';\r\n    }\r\n\r\n    //Function used to show the 4th set of daily questions if the 3rd toggle button has been set to true.\r\n    public Show_orgasmQuestion() {\r\n        var orgasmQuestion = document.getElementById('orgasmQuestion');\r\n        orgasmQuestion.style.display = 'inline';\r\n    }\r\n\r\n    //Function used to hide the 3rd set of daily questions if the 2nd toggle button is set to false.\r\n    public Hide_sexualArousalQuestion() {\r\n        var sexualArousalQuestion = document.getElementById('sexualArousalQuestion');\r\n        sexualArousalQuestion.style.display = 'none';  \r\n    }\r\n\r\n    //Function used to hide the 4th set of daily questions if the 3rd toggle button is set to false.\r\n    public Hide_orgasmQuestion() {\r\n        var orgasmQuestion = document.getElementById('orgasmQuestion');\r\n        orgasmQuestion.style.display = 'none';\r\n        \r\n    }\r\n\r\n\r\n  \r\n    //Function that allows the climax toggle button to be toggled on and off either showing or hiding the climax question.\r\n    public ToggleClimax() {\r\n\r\n        console.log(\"Climax questions toggling....\");\r\n\r\n        //Toggle button goes from false to true, making visible the correct portions of the html page based on this button being true\r\n        if (this.toggleClimax == false) {\r\n            this.toggleClimax = true;\r\n            console.log(this.toggleClimax);\r\n            this.Show_orgasmQuestion();            \r\n        }\r\n\r\n        //Toggle button goes from true to false, hiding \r\n        else {\r\n            this.toggleClimax = false;\r\n            this.Hide_orgasmQuestion();\r\n        }\r\n    }\r\n\r\n    //Function that allows the 1st toggle button to be toggled on and off either showing or hiding the 2nd set of daily questions.\r\n    public ToggleSexualActivity() {\r\n\r\n        console.log(\"Sexual activity toggling....\");\r\n\r\n        // If at least one sexual activity is selected, show the next set of questions.\r\n        if ((this.kissing || this.caressing || this.fondling || this.masturbation || this.oral || this.anal || this.vaginal || (this.other != '' && this.other != undefined)) && !this.none) {\r\n            this.toggleSexualActivity = true;\r\n            console.log(this.toggleSexualActivity);\r\n            this.Show_sexualArousalQuestion();\r\n        }\r\n\r\n        // Ensures if other is filled out that next questions will toggle regardless\r\n        else if ((this.other != '' && this.other != undefined)) {\r\n            this.toggleSexualActivity = true;\r\n            console.log(this.toggleSexualActivity);\r\n            this.Show_sexualArousalQuestion();\r\n        }\r\n\r\n        // Otherwise, hide the next questions. The validation function will determine if NONE is accidentally selected\r\n        else {\r\n            this.toggleSexualActivity = false;\r\n            console.log(this.toggleSexualActivity);\r\n            this.Hide_sexualArousalQuestion();\r\n        }\r\n    }\r\n\r\n    //Function that is called when the user presses the submit button.\r\n    //This function will output an error message if a certain field is missing info and has not yet been filled in.\r\n    //If the form is completed then the function will send the data to the server.\r\n    //Also, send the period length for a user when they have answered yes to daily questions for their period, then no.\r\n    public SubmitForm() { // Form submitted to the server for email deployment. \r\n        //Get the uid from local storage\r\n        this.storage.get('uid').then((data) => {\r\n            var uid = data;\r\n\r\n            //Variables used and getting the results entered in by the user.\r\n            var onPeriod = this.onPeriod;\r\n            var sexualInterest = this.sexualInterest;\r\n\r\n            //Getting the date\r\n            var today = new Date();\r\n\r\n            //Getting the day and putting it into the correct format.\r\n            var day = today.getDate();\r\n            var dayString;\r\n            if (day < 10) {\r\n                dayString = '0' + day.toFixed(0);\r\n            }\r\n            else {\r\n                dayString = day.toFixed(0);\r\n            }\r\n\r\n            //Getting the month and putting it into the correct format.\r\n            var month = today.getMonth() + 1; //January is 0!\r\n            var monthString;\r\n            if (month < 10) {\r\n                monthString = '0' + month.toFixed(0);\r\n            }\r\n            else {\r\n                monthString = month.toFixed(0);\r\n            }\r\n\r\n            //Getting the year and putting it into the correct format.\r\n            var year = today.getFullYear();\r\n            var yearString = year.toFixed(0);\r\n\r\n            //Putting the date variable into its final and correct format\r\n            var date = yearString + \"-\" + monthString + \"-\" + dayString;\r\n\r\n            //Note: All these variables have a check on them so that if the user checks a toggle button and fills in the form but then goes back and \r\n            //unchecks the toggle button the data is not stored and sent to the server but instead is replaced with the words undefined or the correct value\r\n            //so the server doesn't get wrong data.\r\n            var sexualInterest = this.sexualInterest;\r\n            var sexualAttitude = this.sexualAttitude;\r\n            var sexualArousal = this.sexualArousal;\r\n            var noActivity = this.none;\r\n            var kissingActivity = this.kissing;\r\n            var caressingActivity = this.caressing;\r\n            var fondlingActivity = this.fondling;\r\n            var masturbationActivity = this.masturbation;\r\n            var oralActivity = this.oral;\r\n            var analActivity = this.anal;\r\n            var vaginalActivity = this.vaginal;\r\n            var otherActivity = this.other;\r\n            var intensity = this.intensity;\r\n\r\n            // If the user did have sexual activity, put in the post. Otherwise, ignore.\r\n            if (this.toggleSexualActivity == true) {\r\n                sexualArousal = this.sexualArousal;\r\n            }\r\n            // Else if the user did not toggle, we know they ALSO can't have answers for the climax and intensity questions\r\n            else {\r\n                sexualArousal = \"undefined\";\r\n                this.toggleClimax = false;\r\n            }\r\n\r\n            // If the user did orgasm, put it's intensity in the post. Otherwise, ignore.\r\n            if (this.toggleClimax == true) {\r\n                intensity = this.intensity;\r\n            }\r\n            else {\r\n                intensity = \"undefined\";\r\n            }\r\n\r\n            // ** TODO ** COMBINE THIS INTO ONE LINE, CHRIST!\r\n            console.log(uid);\r\n            console.log(date);\r\n            console.log(onPeriod);\r\n            console.log(sexualInterest);\r\n            console.log(sexualAttitude);\r\n            console.log(noActivity);\r\n            console.log(kissingActivity);\r\n            console.log(caressingActivity);\r\n            console.log(fondlingActivity);\r\n            console.log(masturbationActivity);\r\n            console.log(oralActivity);\r\n            console.log(analActivity);\r\n            console.log(vaginalActivity);\r\n            console.log(otherActivity);\r\n            console.log(intensity);\r\n            console.log(sexualArousal);\r\n\r\n            \r\n\r\n            //try to pull up the user's period start date and end date.\r\n            this.storage.get('period_start_date').then((start_date) => {\r\n                //if the period isn't set, and they report they are on their period...\r\n                if (onPeriod == 'Yes' && start_date == undefined) {\r\n                    //set the start date for the user's period to today.\r\n                    this.storage.set('period_start_date', date);\r\n                    console.log('period start date saved.');\r\n                //if the period is set, and they report they aren't on their period...\r\n                } else if (onPeriod == 'No' && start_date != undefined && start_date != date) {\r\n                    //store today as their end date - it looks like they have a period to report.\r\n                    this.storage.set('period_end_date', date);\r\n                    console.log('period end date saved!');\r\n                    this.periodAlertForm(uid, start_date, date);\r\n                }\r\n            });\r\n\r\n\r\n            //Varaibles sent to the server.\r\n            //Note that all variables are sent as strings.\r\n            var form_object = {  // this  is the form object sent to the server.\r\n                uid: uid,\r\n                date: date,\r\n                onPeriod: onPeriod,\r\n                sexualInterest: sexualInterest,\n                sexualAttitude: sexualAttitude,\r\n                sexualArousal: sexualArousal,\r\n                kissing: kissingActivity,\r\n                caressing: caressingActivity,\r\n                fondling: fondlingActivity,\r\n                masturbation: masturbationActivity,\r\n                oral: oralActivity,\r\n                anal: analActivity,\r\n                vaginal: vaginalActivity,\r\n                none: noActivity,\r\n                other: otherActivity,\r\n                intensity: intensity\r\n            };\r\n\r\n            // This is how the page is submitted.\r\n            //Note that if the user leads out specific fields that need to be filled out then the page will not submit and an error message will be sent to the user.\r\n            if ((sexualInterest == '' || onPeriod == '' || sexualAttitude == '')\r\n                || (sexualInterest == undefined || onPeriod == undefined || sexualAttitude == undefined)) {\r\n                this.customalert(\"Please go back through the form and fill out the first three questions.\", \"Cannot Submit\");\r\n            }\r\n            else {\r\n                if (this.toggleSexualActivity == true) {\r\n                    if (sexualArousal == '') {\r\n                        this.customalert(\"Please go back through the form and fill out missing fields.\", \"Cannot Submit\");\r\n                        //The above error will never occur since variables are initialized to \"1\".\r\n                    }\r\n                    else {\r\n                        this.post_tracker(form_object);\r\n                    }\r\n                }\r\n                else {\r\n                    this.post_tracker(form_object);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // post_tracker\r\n    // send HTTP post request to the server to add \r\n    // daily questions answers to entry table for this uid\r\n    // input:\r\n    //   (see form_object above)\r\n    //   object with all daily question answers, uid, date\r\n    // output:\r\n    //   success: obj.error field set false by server\r\n    //     answers added to entry table, alert to user,\r\n    //     link back to main page of app.\r\n    //   failure: obj.error field set to true by server\r\n    //     alert to user \r\n    public post_tracker(tracker_data) {\r\n        // Server daily questions handler url (addDaily.php)\r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/addDaily.php\"\r\n        console.log(\"in post tracker\")\r\n\r\n        this.http.get(url, {params:tracker_data}).map((response) => {\r\n                var Obj = response.json();\r\n                console.log(Obj.error);\r\n                console.log(Obj.message);\r\n                if (Obj.error == false) {\r\n                        // get request success\r\n                        console.log(\"post tracker success\");\r\n                        this.customalert(\"Your daily questions have been successfully submitted\", \"Success\");\r\n                        this.customalert(\"If birth control, relationship status, or any other settings have changed please navigate to the settings tab and update them.\", \"User Note\");\r\n                        console.log(response);\r\n                        return true;\r\n                } else {\r\n                        // get request failed\r\n                        console.log(\"post tracker failure: \" + Obj.message);\r\n                        this.customalert(\"Failure to submit your daily questions\", \"Failure\");\r\n                        return false;\r\n                }\r\n        }).subscribe();\r\n\r\n    }   // end post_tracker\r\n\r\n    \r\n    \r\n\r\n    \r\n\r\n    // a custom alert for ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\r\n\r\n    // an alert with date fields\r\n    public periodAlertForm(uid: string, start_date: string, end_date: string){\r\n\r\n        let prompt = this.alertCtrl.create({\r\n          title: \"It appears you\\'ve finished your period.\",\r\n          message: \"Please verify that these fields look correct. They are important to finding your average cycle length.\",\r\n          inputs: [\r\n          {\r\n            name: 'PeriodStartDate',\r\n            placeholder: 'Start Date',\r\n            value: start_date,\r\n            type: \"date\"\r\n          },\r\n          {\r\n            name: 'PeriodEndDate',\r\n            placeholder: 'End Date',\r\n            value: end_date,\r\n            type: \"date\"\r\n          },\r\n          ],\r\n          buttons: [\r\n          {\r\n            text: 'Cancel',\r\n            handler: data => {\r\n              console.log('Cancel clicked');\r\n              this.customalert(\"Your daily questions have not been submitted. Please try again.\", \"Submission Cancelled\");\r\n            }\r\n          },\r\n          {\r\n            text: 'OK',\r\n            handler: data => {\r\n              var form_object = {  // this  is the form object sent to the server.\r\n                uid: uid,\r\n                mens_start: data.PeriodStartDate,\r\n                mens_end: data.PeriodEndDate\r\n              };\r\n              console.log(data.PeriodStartDate);\r\n              console.log(data.PeriodEndDate);\r\n              console.log(uid);\r\n              console.log(\"Saved!\");\r\n              this.post_period(form_object);\r\n            }\r\n          }\r\n          ]\r\n        });\r\n\r\n        prompt.present(prompt);\r\n  }\r\n\r\n\r\n      // post_period\r\n    // send HTTP post request to the server to add \r\n    // a period for this uid\r\n    // preconditions:\r\n    //   user has entered in a daily question that they were on their period, and then they entered that they were not.\r\n    // input:\r\n    //   a form object with mens_start, mens_end, and uid\r\n    // output:\r\n    //   success: obj.error field set false by server\r\n    //     period added to Period table.\r\n    //   failure: obj.error field set to true by server\r\n    //     alert to user, ask to report questions.\r\n    public post_period(period_data) {\r\n        // Server daily questions handler url (addDaily.php)\r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/addPeriod.php\"\r\n        console.log(\"in post period\")\r\n        \r\n\r\n        this.http.get(url, {params:period_data}).map((response) => {\r\n                var Obj = response.json();\r\n                console.log(Obj.error);\r\n                console.log(Obj.message);\r\n                if (Obj.error == false) {\r\n                        // get request success\r\n                        console.log(\"post period success\");\r\n                        this.customalert(\"Your period has been successfully submitted.\", \"Success\");\r\n                        //remove the locally stored start and end dates; they'll be stored next time the user reports a period.\r\n                        this.storage.remove('period_start_date');\r\n                        this.storage.remove('period_end_date');\r\n                        console.log(response);\r\n                        return true;\r\n                } else {\r\n                        // get request failed\r\n                        console.log(\"post tracker failure: \" + Obj.message);\r\n                        this.customalert(\"Failure to submit your period. Please try again.\", \"Failure\");\r\n                        return false;\r\n                }\r\n        }).subscribe();\r\n\r\n    }   // end post_period\r\n\r\n          // get_statistics\r\n    // send HTTP post request to the server to get statistics for the current user.\r\n    // preconditions:\r\n    //   none.\r\n    // input:\r\n    //   a form object with uid.\r\n    // output:\r\n    //   success: obj.error field set false by server\r\n    //     user statistics successfully returned.\r\n    //   failure: obj.error field set to true by server\r\n    //     alert to user, ask to report questions.\r\n    public get_statistics(statistics_data) {\r\n        // Server daily questions handler url (addDaily.php)\r\n        var url = \"https://luna-app.000webhostapp.com/api/v1/getUserStats.php\"\r\n        console.log(\"in get statistics\")\r\n        \r\n\r\n        this.http.get(url, {params:statistics_data}).map((response) => {\r\n                var Obj = response.json();\r\n                console.log(Obj.error);\r\n                console.log(Obj.message);\r\n                if (Obj.error == false) {\r\n                        // get request success\r\n                        console.log(\"get statistics success\");\r\n                        this.avgCycleLengthString = \"User's average cycle length: \"+Obj.average_cycle_length;\r\n                        console.log(response);\r\n                        return true;\r\n                } else {\r\n                        // get request failed\r\n                        console.log(\"get statistics failure: \" + Obj.message);\r\n                        return false;\r\n                }\r\n        }).subscribe();\r\n\r\n    }   // end post_period\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tracker/tracker.ts","/*\nTitle: logout.ts\nAuthor: Sydney Norman\nDate: 11/7/2017\n\nPurpose: This code asks the user if they would like to logout.\n\n*/\n\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { LoginPage } from '../login/login';\n\n@Component({\r\n    selector: 'page-logout',\r\n    templateUrl: 'logout.html',\r\n})\r\nexport class LogoutPage {\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private storage: Storage) {\n    }\n\n    public Logout() {\n\tthis.storage.clear();\n \tthis.navCtrl.setRoot(LoginPage);\n \tconsole.log(\"Logout Successful\");\n    }\n\n    // a custom alert I have made with ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/logout/logout.ts","/*\r\nTitle: calendar.service.ts\r\nAuthor: Provided by the purchased Ionic 3 Calendar feature\n    Info on the Ionic 3 Calendar can be found at the following: https://market.ionic.io/themes/ioniccalendar\r\nDate: 7/19/2017\r\n\r\nPurpose: Code creates the calendar events and markers within the calendar.\nThis piece of code is called by the calendar.ts file\n\nAdditions that still need to be made: The calendar needs it's event markers to indicate the beginning and ending dates of a cycle but this feature\nhasn't been added yet.\r\n\r\nInput:\r\n    None\r\n\r\nOutput:\n    Calendar:\n        A calendar is output to the screen in month format.\n        A feature that hasn't been added yet but will be is event markers to the calendar that indicate when the user's cycle will begin and end.\r\n*/\n\nimport {Injectable} from '@angular/core';\n\n\n@Injectable()\nexport class CalendarService {\n  constructor() {\n    console.log('CalendarService');\n  }\n\n  getEvents(day) {\n    let events = [\n      /* The following can be used to add events to the bottom of the calendar for specific days.\n        {\n        name: 'Plan for weekend'\n      },\n      {\n        name:'Book Tickets for Movie'\n      },\n      {\n        name:'Meeting at 4 pm'\n      },\n      {\n        name:'Dinner Party '\n      }\n      */\n    ]\n\n    return events;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calendar/calendar.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","/*\r\nTitle: app.module.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/20/2017\r\n\r\nPurpose: This code helps to properly create and initialize the app.\r\n\r\nInput:\r\n    None\r\n\r\nOutput:\r\n    None\r\n\r\n    Success:\r\n        App is created successfully\r\n\r\n    Failure:\r\n        App fails to be created and launch.\r\n*/\r\n\r\n//imports needed for correct initialization\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { IonicStorageModule } from '@ionic/storage';        //added for localStorage\r\nimport { MyApp } from './app.component';\r\nimport { OnBoardingPage } from '../pages/onBoarding/onBoarding';\r\nimport { SettingsPage } from '../pages/settings/settings';\r\nimport { SettingsLoginPage } from '../pages/settingsLogin/settingsLogin';\r\nimport { TrackerPage } from '../pages/tracker/tracker';\r\nimport { CreateAccountPage } from '../pages/createAccount/createAccount';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { LogoutPage } from '../pages/logout/logout';\r\nimport { DisplayUIDPage } from '../pages/displayUID/displayUID';\r\nimport { CalendarComponent } from '../pages/calendar/calendar';\r\nimport { CalendarService } from '../pages/calendar/calendar.service';\r\nimport { Launch } from '../pages/launch/launch';\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    OnBoardingPage,\r\n      SettingsPage,\r\n      SettingsLoginPage,\r\n      TrackerPage,\r\n      CreateAccountPage,\r\n      LoginPage,\r\n      LogoutPage,\r\n      DisplayUIDPage,\r\n      Launch,\r\n      CalendarComponent,\r\n\r\n    TabsPage\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpModule,\r\n      IonicStorageModule.forRoot(),     //added for localStorage.\r\n      IonicModule.forRoot(MyApp, {\r\n          monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n          monthShortNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ],\r\n          dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ],\r\n          dayShortNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thr', 'Fri', 'Sat'],\r\n          //Added in the above info so the date-time picker function correctly and lists the proper things.\r\n      })\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    OnBoardingPage,\r\n      SettingsPage,\r\n      SettingsLoginPage,\r\n      TrackerPage,\r\n      CreateAccountPage,\r\n      LoginPage,\r\n      LogoutPage,\r\n      DisplayUIDPage,\r\n      Launch,\r\n      CalendarComponent,\r\n      TabsPage\r\n  ],\r\n  providers: [   StatusBar, SplashScreen, { provide: ErrorHandler, useClass: IonicErrorHandler }, CalendarService ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/*\r\nTitle: app.components.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/20/2017\r\n\r\nPurpose: This code helps to properly create and initialize the app and also sets the beginning page that the app opens up in.\r\n\r\nInput:\r\n    None\r\n\r\nOutput:\r\n    None\r\n\r\n    Success:\r\n        App is created successfully\r\n\r\n    Failure:\r\n        App fails to be created and launch.\r\n*/\r\n\r\n//imports needed for correct initialization\r\nimport { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { CreateAccountPage } from '../pages/createAccount/createAccount';\r\nimport { Launch } from '../pages/launch/launch';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  //@ViewChild(Nav) nav: Nav;\r\n\r\n \r\n     rootPage = CreateAccountPage;\r\n  pages: Array<{title: string, component: any}>;\r\n\r\n  constructor(\r\n    public platform: Platform,\r\n    //public menu: MenuController,\r\n    public statusBar: StatusBar,\r\n    public splashScreen: SplashScreen\r\n  ) {\r\n    this.initializeApp();\r\n\r\n    // set our app's pages\r\n    this.pages = [\r\n      { title: 'Create Account Page', component: CreateAccountPage },\r\n      { title: 'Launch page', component: Launch }\r\n    ];\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n    });\r\n  }\r\n/*\r\n  openPage(page) {\r\n    // close the menu when clicking a link from the menu\r\n    //this.menu.close();\r\n    // navigate to the new page if it is not the current page\r\n    //this.nav.setRoot(page.component);\r\n  }\r\n  */\r\n}\r\n\r\n/*      DEBUG\r\nexport class MyApp {\r\n    rootPage = CreateAccountPage;\r\n\r\n    //Below can be used for debugging if you want the app to initially open up in a specific page\r\n    //rootPage = TabsPage;\r\n    //rootPage = OnBoardingPage;\r\n\r\n  constructor(platform: Platform) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.StatusBar.styleDefault();\r\n      this.Splashscreen.hide();\r\n    });\r\n  }\r\n}\r\n*/    // DEBUG\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/*\r\nTitle: displayUID.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/20/2017\r\n\r\nPurpose: This code creates a button that can be pressed which will output the UID of the user to the screen.\nThis code is not actually used in the app but is a debugging feature where this page can replace calendar or some other page\nif its suspected that the app is having issues storing and retreiving a users UID from local storage.\r\n\r\nInput:\n    None\r\n\r\nOutput:\n    An alert to the user displaying their UID.\r\n\n    Success:\r\n        UID output to the screen when the button is pressed.\r\n\r\n    Failure:\r\n        UID is not output to the screen when the button is pressed.\r\n*/\n\n//imports needed for app initialization.\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n    selector: 'page-displayUID',\r\n    templateUrl: 'displayUID.html',\r\n})\r\nexport class DisplayUIDPage {\n\n    constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController, private storage: Storage) {\n\n    }\n\n    ShowVariables()\n    {\n        this.storage.get('uid').then((data) => {\n            var uid = data;\n\n            this.customalert(uid, 'Variables');\n        });\r\n    }\n\n    // a custom alert I have made with ionic 2. \r\n    public customalert(s: string, t: string) {\r\n        console.log(\"alert: \" + s);\r\n        let alert = this.alertCtrl.create({\r\n            title: t,\r\n            subTitle: s,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present(alert);\r\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/displayUID/displayUID.ts","/*\r\nTitle: calendar.ts\r\nAuthor: Provided by the purchased Ionic 3 Calendar feature\n    Info on the Ionic 3 Calendar can be found at the following: https://market.ionic.io/themes/ioniccalendar\r\nDate: 7/19/2017\r\n\r\nPurpose: Code creates the calendar used within the app. Called by launch.ts file to make the calendar.\n\nAdditions that still need to be made: The calendar needs it's event markers to indicate the beginning and ending dates of a cycle but this feature\nhasn't been added yet.\r\n\r\nInput:\r\n    None\r\n\r\nOutput:\n    Calendar:\n        A calendar is output to the screen in month format.\n        A feature that hasn't been added yet but will be is event markers to the calendar that indicate when the user's cycle will begin and end.\r\n*/\n\nimport { Component, ViewChild } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {Slides} from 'ionic-angular';\nimport { LoginPage } from '../login/login';\nimport { Storage } from '@ionic/storage';\nimport {CalendarService} from './calendar.service';\n\nimport moment from 'moment';\n\nconst NUM_OF_DAYS = 7;\n\n\n@Component({\n  selector: 'calendar',\n  templateUrl: 'calendar.html'\n})\nexport class CalendarComponent {\n  @ViewChild('mySlider') slider: Slides;\n  public weekNames:Array<String>;\n  public selectedDate:any;\n  public today:any;\n  public events:Array<any> = [];\n  public months:Array<any> = [];\n  constructor(public navCtrl: NavController, private calendarService:CalendarService, private storage: Storage) {\n    this.weekNames = ['S','M', 'T', 'W', 'T', 'F', 'S'];\n    this.today = moment();\n\n  }\n\n  setTimeToZero(dateLocal) {\n    return dateLocal.day(0).hour(0).minute(0).second(0).millisecond(0);\n  }\n\n  createWeek(forDateObj) {\n    let weekDays = [],count = 0;\n    while(count < NUM_OF_DAYS) {\n      weekDays.push(forDateObj);\n      forDateObj = forDateObj.clone();\n      forDateObj.add(1, 'd');\n      count++;\n    }\n    return weekDays;\n  }\n\n  createMonth(monthObj,forMonthObj) {\n    monthObj.weeks = [];\n    let month = forMonthObj.clone(),done=true;\n\n    while(done) {\n      monthObj.weeks.push({ days: this.createWeek(month.clone()) });\n      monthObj.weeks.push({});\n      month.add(1, 'w');\n      if(month.month() !== monthObj.selectedMonth.month()) {\n        done=false;\n      }\n    }\n  }\n\n  initPrev(month){\n    let monthObj = {};\n    monthObj['selectedMonth'] = month;\n    this.initMonth(monthObj);\n    this.months.unshift(monthObj);\n    this.months.pop();\n  }\n\n  initMonth(monthObj) {\n    monthObj.selectedDate = monthObj.selectedMonth.clone();\n    monthObj.current = monthObj.selectedDate.clone();\n    let startMonth = monthObj.selectedDate.clone();\n    startMonth.date(1);\n    this.setTimeToZero(startMonth.day(0));\n    this.createMonth(monthObj,startMonth);\n    this.events = this.calendarService.getEvents(this.selectedDate);\n  }\n\n  init(month){\n    let monthObj = {};\n    monthObj['selectedMonth'] = month;\n    this.initMonth(monthObj);\n    this.months.push(monthObj);\n  }\n\n\n\n  ngOnInit() {\n\n\n    let currentMonth = moment();\n    let prevMonth = currentMonth.clone().month(currentMonth.month() - 1);\n    let nextMonth = currentMonth.clone().month(currentMonth.month() + 1);\n\n    this.init(prevMonth);\n    this.init(currentMonth);\n    this.init(nextMonth);\n    this.selectedDate = moment();\n  }\n\n  select(monthObj,day,rowIndex) {\n    if(day.isSame(monthObj.selectedDate) && monthObj.selectedRowIndex !== -1){\n      monthObj.selectedRowIndex = -1;\n    } else {\n      monthObj.selectedRowIndex = rowIndex;\n    }\n    monthObj.selectedDate = day;\n    this.selectedDate = day;\n    //CalendarService.getEvents(day); //Use this to fetch events for the selected day\n  }\n\n  handleSlideView() {\n    let activeIndex = this.slider.getActiveIndex();\n    let activeMonth = this.months[activeIndex].selectedMonth;\n    this.selectedDate = activeMonth;\n    let nextMonth = activeMonth.clone().month(activeMonth.month() + 1);\n    let prevMonth = activeMonth.clone().month(activeMonth.month() - 1);\n    if(activeIndex === 0) {\n      this.initPrev(prevMonth);\n      this.slider.slideTo(1, 0, false);\n    } else if(activeIndex === (this.months.length - 1)) {\n      this.init(nextMonth);\n      this.months.shift();\n      this.slider.slideTo(this.months.length - 2, 0, false);\n    }\n  }\n\n  onSlideChanged() {\n    this.handleSlideView();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calendar/calendar.ts","var map = {\n\t\"./af\": 206,\n\t\"./af.js\": 206,\n\t\"./ar\": 207,\n\t\"./ar-dz\": 208,\n\t\"./ar-dz.js\": 208,\n\t\"./ar-kw\": 209,\n\t\"./ar-kw.js\": 209,\n\t\"./ar-ly\": 210,\n\t\"./ar-ly.js\": 210,\n\t\"./ar-ma\": 211,\n\t\"./ar-ma.js\": 211,\n\t\"./ar-sa\": 212,\n\t\"./ar-sa.js\": 212,\n\t\"./ar-tn\": 213,\n\t\"./ar-tn.js\": 213,\n\t\"./ar.js\": 207,\n\t\"./az\": 214,\n\t\"./az.js\": 214,\n\t\"./be\": 215,\n\t\"./be.js\": 215,\n\t\"./bg\": 216,\n\t\"./bg.js\": 216,\n\t\"./bm\": 217,\n\t\"./bm.js\": 217,\n\t\"./bn\": 218,\n\t\"./bn.js\": 218,\n\t\"./bo\": 219,\n\t\"./bo.js\": 219,\n\t\"./br\": 220,\n\t\"./br.js\": 220,\n\t\"./bs\": 221,\n\t\"./bs.js\": 221,\n\t\"./ca\": 222,\n\t\"./ca.js\": 222,\n\t\"./cs\": 223,\n\t\"./cs.js\": 223,\n\t\"./cv\": 224,\n\t\"./cv.js\": 224,\n\t\"./cy\": 225,\n\t\"./cy.js\": 225,\n\t\"./da\": 226,\n\t\"./da.js\": 226,\n\t\"./de\": 227,\n\t\"./de-at\": 228,\n\t\"./de-at.js\": 228,\n\t\"./de-ch\": 229,\n\t\"./de-ch.js\": 229,\n\t\"./de.js\": 227,\n\t\"./dv\": 230,\n\t\"./dv.js\": 230,\n\t\"./el\": 231,\n\t\"./el.js\": 231,\n\t\"./en-au\": 232,\n\t\"./en-au.js\": 232,\n\t\"./en-ca\": 233,\n\t\"./en-ca.js\": 233,\n\t\"./en-gb\": 234,\n\t\"./en-gb.js\": 234,\n\t\"./en-ie\": 235,\n\t\"./en-ie.js\": 235,\n\t\"./en-nz\": 236,\n\t\"./en-nz.js\": 236,\n\t\"./eo\": 237,\n\t\"./eo.js\": 237,\n\t\"./es\": 238,\n\t\"./es-do\": 239,\n\t\"./es-do.js\": 239,\n\t\"./es-us\": 240,\n\t\"./es-us.js\": 240,\n\t\"./es.js\": 238,\n\t\"./et\": 241,\n\t\"./et.js\": 241,\n\t\"./eu\": 242,\n\t\"./eu.js\": 242,\n\t\"./fa\": 243,\n\t\"./fa.js\": 243,\n\t\"./fi\": 244,\n\t\"./fi.js\": 244,\n\t\"./fo\": 245,\n\t\"./fo.js\": 245,\n\t\"./fr\": 246,\n\t\"./fr-ca\": 247,\n\t\"./fr-ca.js\": 247,\n\t\"./fr-ch\": 248,\n\t\"./fr-ch.js\": 248,\n\t\"./fr.js\": 246,\n\t\"./fy\": 249,\n\t\"./fy.js\": 249,\n\t\"./gd\": 250,\n\t\"./gd.js\": 250,\n\t\"./gl\": 251,\n\t\"./gl.js\": 251,\n\t\"./gom-latn\": 252,\n\t\"./gom-latn.js\": 252,\n\t\"./gu\": 253,\n\t\"./gu.js\": 253,\n\t\"./he\": 254,\n\t\"./he.js\": 254,\n\t\"./hi\": 255,\n\t\"./hi.js\": 255,\n\t\"./hr\": 256,\n\t\"./hr.js\": 256,\n\t\"./hu\": 257,\n\t\"./hu.js\": 257,\n\t\"./hy-am\": 258,\n\t\"./hy-am.js\": 258,\n\t\"./id\": 259,\n\t\"./id.js\": 259,\n\t\"./is\": 260,\n\t\"./is.js\": 260,\n\t\"./it\": 261,\n\t\"./it.js\": 261,\n\t\"./ja\": 262,\n\t\"./ja.js\": 262,\n\t\"./jv\": 263,\n\t\"./jv.js\": 263,\n\t\"./ka\": 264,\n\t\"./ka.js\": 264,\n\t\"./kk\": 265,\n\t\"./kk.js\": 265,\n\t\"./km\": 266,\n\t\"./km.js\": 266,\n\t\"./kn\": 267,\n\t\"./kn.js\": 267,\n\t\"./ko\": 268,\n\t\"./ko.js\": 268,\n\t\"./ky\": 269,\n\t\"./ky.js\": 269,\n\t\"./lb\": 270,\n\t\"./lb.js\": 270,\n\t\"./lo\": 271,\n\t\"./lo.js\": 271,\n\t\"./lt\": 272,\n\t\"./lt.js\": 272,\n\t\"./lv\": 273,\n\t\"./lv.js\": 273,\n\t\"./me\": 274,\n\t\"./me.js\": 274,\n\t\"./mi\": 275,\n\t\"./mi.js\": 275,\n\t\"./mk\": 276,\n\t\"./mk.js\": 276,\n\t\"./ml\": 277,\n\t\"./ml.js\": 277,\n\t\"./mr\": 278,\n\t\"./mr.js\": 278,\n\t\"./ms\": 279,\n\t\"./ms-my\": 280,\n\t\"./ms-my.js\": 280,\n\t\"./ms.js\": 279,\n\t\"./my\": 281,\n\t\"./my.js\": 281,\n\t\"./nb\": 282,\n\t\"./nb.js\": 282,\n\t\"./ne\": 283,\n\t\"./ne.js\": 283,\n\t\"./nl\": 284,\n\t\"./nl-be\": 285,\n\t\"./nl-be.js\": 285,\n\t\"./nl.js\": 284,\n\t\"./nn\": 286,\n\t\"./nn.js\": 286,\n\t\"./pa-in\": 287,\n\t\"./pa-in.js\": 287,\n\t\"./pl\": 288,\n\t\"./pl.js\": 288,\n\t\"./pt\": 289,\n\t\"./pt-br\": 290,\n\t\"./pt-br.js\": 290,\n\t\"./pt.js\": 289,\n\t\"./ro\": 291,\n\t\"./ro.js\": 291,\n\t\"./ru\": 292,\n\t\"./ru.js\": 292,\n\t\"./sd\": 293,\n\t\"./sd.js\": 293,\n\t\"./se\": 294,\n\t\"./se.js\": 294,\n\t\"./si\": 295,\n\t\"./si.js\": 295,\n\t\"./sk\": 296,\n\t\"./sk.js\": 296,\n\t\"./sl\": 297,\n\t\"./sl.js\": 297,\n\t\"./sq\": 298,\n\t\"./sq.js\": 298,\n\t\"./sr\": 299,\n\t\"./sr-cyrl\": 300,\n\t\"./sr-cyrl.js\": 300,\n\t\"./sr.js\": 299,\n\t\"./ss\": 301,\n\t\"./ss.js\": 301,\n\t\"./sv\": 302,\n\t\"./sv.js\": 302,\n\t\"./sw\": 303,\n\t\"./sw.js\": 303,\n\t\"./ta\": 304,\n\t\"./ta.js\": 304,\n\t\"./te\": 305,\n\t\"./te.js\": 305,\n\t\"./tet\": 306,\n\t\"./tet.js\": 306,\n\t\"./th\": 307,\n\t\"./th.js\": 307,\n\t\"./tl-ph\": 308,\n\t\"./tl-ph.js\": 308,\n\t\"./tlh\": 309,\n\t\"./tlh.js\": 309,\n\t\"./tr\": 310,\n\t\"./tr.js\": 310,\n\t\"./tzl\": 311,\n\t\"./tzl.js\": 311,\n\t\"./tzm\": 312,\n\t\"./tzm-latn\": 313,\n\t\"./tzm-latn.js\": 313,\n\t\"./tzm.js\": 312,\n\t\"./uk\": 314,\n\t\"./uk.js\": 314,\n\t\"./ur\": 315,\n\t\"./ur.js\": 315,\n\t\"./uz\": 316,\n\t\"./uz-latn\": 317,\n\t\"./uz-latn.js\": 317,\n\t\"./uz.js\": 316,\n\t\"./vi\": 318,\n\t\"./vi.js\": 318,\n\t\"./x-pseudo\": 319,\n\t\"./x-pseudo.js\": 319,\n\t\"./yo\": 320,\n\t\"./yo.js\": 320,\n\t\"./zh-cn\": 321,\n\t\"./zh-cn.js\": 321,\n\t\"./zh-hk\": 322,\n\t\"./zh-hk.js\": 322,\n\t\"./zh-tw\": 323,\n\t\"./zh-tw.js\": 323\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 399;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 399\n// module chunks = 0","/*\r\nTitle: tabs.ts\r\nAuthor: Dillon Pulliam\r\nDate: 7/20/2017\r\n\r\nPurpose: This code creates and properly links our 3 tabs for main app execution\r\n\r\nInput:\r\n\r\nOutput:\r\n    Success:\r\n        3 tabs are successfully created and linked in the app\r\n\r\n    Failure:\r\n        3 tabs are not successfully created and linked in the app.\r\n*/\r\n\r\n//imports needed for correct initialization.\r\nimport { Component } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { SettingsLoginPage } from '../settingsLogin/settingsLogin';\r\nimport { TrackerPage } from '../tracker/tracker';\r\nimport { Launch } from '../launch/launch';\r\nimport { LogoutPage } from '../logout/logout';\r\n\r\n@Component({\r\n  templateUrl: 'tabs.html'\r\n})\r\nexport class TabsPage {\r\n    // this tells the tabs component which pages should be each tab's root Page\r\n\r\n    //The following lines of code can be used to easily display the onBoarding page within the tabs or the page that can be used to display a user's uid.\r\n    //tab1Root: any = OnBoardingPage;\r\n    //tab1Root: any = DisplayUIDPage;\r\n\r\n    tab1Root: any = Launch;\r\n    tab2Root: any = TrackerPage;\r\n    tab3Root: any = SettingsLoginPage;\r\n    tab4Root: any = LogoutPage;\r\n\r\n    constructor(private storage: Storage) {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts"],"sourceRoot":""}